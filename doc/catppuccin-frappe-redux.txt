*catppuccin-frappe-redux.txt*     Gruvbox with Material Palette
*catppuccin-frappe-redux*
>
           ______                 __
          / ____/______  ___   __/ /_  ____  _  __
         / / __/ ___/ / / / | / / __ \/ __ \| |/_/
        / /_/ / /  / /_/ /| |/ / /_/ / /_/ />  <
        \____/_/   \__,_/ |___/_.___/\____/_/|_|

            __  ___      __            _       __
           /  |/  /___ _/ /____  _____(_)___ _/ /
          / /|_/ / __ `/ __/ _ \/ ___/ / __ `/ /
         / /  / / /_/ / /_/  __/ /  / / /_/ / /
        /_/  /_/\__,_/\__/\___/_/  /_/\__,_/_/
<

==============================================================================
CONTENTS                                     *catppuccin-frappe-redux-contents*

Introduction                                 |catppuccin-frappe-redux-introduction|
Installation                                 |catppuccin-frappe-redux-installation|
Usage                                        |catppuccin-frappe-redux-usage|
Configuration                                |catppuccin-frappe-redux-configuration|
FAQ                                          |catppuccin-frappe-redux-faq|

Note: Type |gO| in neovim to show the outline of contents.

==============================================================================
INTRODUCTION                                     *catppuccin-frappe-redux-introduction*

Gruvbox Material is a modified version of Gruvbox, the contrast is adjusted to
be softer in order to protect developers' eyes.

There are 3 palettes available in this color scheme:

- `material`: Carefully designed to have a soft contrast.
- `mix`: Color palette obtained by calculating the mean of the other two.
- `original`: The color palette used in the original gruvbox.

This color scheme uses the `material` palette by default, you can use
|g:catppuccin_frappe_redux_foreground| to switch to another palette.

Features~

- Carefully designed color palette for eye protection.
- Switch back to the original color palette whenever you like.
- Highly customizable.
- Rich support for common file types and plugins.
- Tree-sitter support.
- Semantic highlighting support.
- Italic support ðŸŽ‰

==============================================================================
INSTALLATION                                     *catppuccin-frappe-redux-installation*

Note: For better syntax highlighting support, consider installing one of the
following plugins additionally to this colorscheme:

	https://gitlab.com/sheerun/vim-polyglot
	https://gitlab.com/nvim-treesitter/nvim-treesitter.

------------------------------------------------------------------------------
Via a Plugin Manager

VIM-PLUG
>
    Plug 'jjlabs/catppuccin-frappe-redux'
<
Refer to https://gitlab.com/junegunn/vim-plug for further information.

LAZY.NVIM

In Neovim (Lua configuration):
>
    {
      'jjlabs/catppuccin-frappe-redux',
      lazy = false,
      priority = 1000,
      config = function()
        -- Optionally configure and load the colorscheme
        -- directly inside the plugin declaration.
        vim.g.catppuccin_frappe_redux_enable_italic = true
        vim.cmd.colorscheme('catppuccin-frappe-redux')
      end
    }
<
Refer to https://gitlab.com/folke/lazy.nvim for further information.

------------------------------------------------------------------------------
As a Native Vim Package

Users of Vim 8 and greater may leverage Vim's native |packages| system.

1. Create a new directory: `$ mkdir -p ~/.vim/pack/colors/opt`

2. Clone this repository: `$ git clone --depth 1 https://gitlab.com/jjlabs/catppuccin-frappe-redux.git ~/.vim/pack/colors/opt/catppuccin-frappe-redux`

3. Generate help tags: `:helptags ~/.vim/pack/colors/opt/catppuccin-frappe-redux/doc/`

4. Add `packadd! catppuccin-frappe-redux` to your vimrc.

Note: If you install this color scheme to `pack/*/start` instead of
`pack/*/opt`, you still need to add `packadd! catppuccin-frappe-redux` to your vimrc,
as discussed in the following issue:
https://gitlab.com/jjlabs/catppuccin-frappe-redux/issues/60

------------------------------------------------------------------------------
Manually

Users of Vim 7 and lower may install the colorscheme manually.

1. Clone the repository: `git clone --depth 1 https://gitlab.com/jjlabs/catppuccin-frappe-redux.git`

2. Copy `catppuccin-frappe-redux/autoload/catppuccin_frappe_redux.vim` to `~/.vim/autoload/`.

3. Copy `catppuccin-frappe-redux/colors/catppuccin-frappe-redux.vim` to `~/.vim/colors/`.

4. Copy `catppuccin-frappe-redux/doc/catppuccin-frappe-redux.txt` to `~/.vim/doc/` and
   execute `:helptags ~/.vim/doc/` to generate help tags.

5. To install the airline theme, copy
   `catppuccin-frappe-redux/autoload/airline/themes/catppuccin_frappe_redux.vim`
   to `~/.vim/autoload/airline/themes/`.
   https://gitlab.com/vim-airline/vim-airline

6. To install the lightline theme,
   copy `catppuccin-frappe-redux/autoload/lightline/colorscheme/catppuccin_frappe_redux.vim`
   to `~/.vim/autoload/lightline/colorscheme/`.
   https://gitlab.com/itchyny/lightline.vim

7. To install the lualine theme,
   copy `catppuccin-frappe-redux/lua/lualine/themes/catppuccin-frappe-redux.lua`
   to `~/.config/nvim/lua/lualine/themes/`.
   https://gitlab.com/nvim-lualine/lualine.nvim

------------------------------------------------------------------------------
AUR

There are some packages available for Arch Linux users in AUR:

	https://aur.archlinux.org/pkgbase/vim-catppuccin-frappe-redux-git (Vim)
	https://aur.archlinux.org/pkgbase/neovim-catppuccin-frappe-redux-git (Neovim)

==============================================================================
USAGE                                                   *catppuccin-frappe-redux-usage*

------------------------------------------------------------------------------

Vim~

    Put something like this in your vimrc:
>
        " Important!!
        if has('termguicolors')
          set termguicolors
        endif

        " For dark version.
        set background=dark

        " For light version.
        set background=light

        " Set contrast.
        " This configuration option should be placed before `colorscheme catppuccin-frappe-redux`.
        " Available values: 'hard', 'medium'(default), 'soft'
        let g:catppuccin_frappe_redux_background = 'soft'

        " For better performance
        let g:catppuccin_frappe_redux_better_performance = 1

        colorscheme catppuccin-frappe-redux
<
    See |catppuccin-frappe-redux-configuration| for more configuration options.

    If you want to apply this color scheme temporarily, run this command in
    vim(this may cause broken colors):
>
        :colorscheme catppuccin-frappe-redux
<
------------------------------------------------------------------------------

Airline~

    To enable [airline](https://gitlab.com/vim-airline/vim-airline) color
    scheme, put this in your vimrc:
>
        let g:airline_theme = 'catppuccin_frappe_redux'
<
    To apply it without reloading:
>
        :AirlineTheme catppuccin_frappe_redux
<
------------------------------------------------------------------------------

Lightline~

    To enable [lightline](https://gitlab.com/itchyny/lightline.vim) color
    scheme, put this in your vimrc:
>
        let g:lightline = {}
        let g:lightline.colorscheme = 'catppuccin_frappe_redux'

        " Or this line:
        let g:lightline = {'colorscheme' : 'catppuccin_frappe_redux'}
<
    To apply it without reloading:
>
        :let g:lightline.colorscheme = 'catppuccin_frappe_redux'
        :call lightline#init()
        :call lightline#colorscheme()
<
------------------------------------------------------------------------------

Lualine~

    To enable [lualine](https://gitlab.com/nvim-lualine/lualine.nvim) color
    scheme, put this in your init.lua:
>
        require'lualine'.setup {
          options = {
            theme = 'catppuccin-frappe-redux'
          }
        }
<
    To apply it without reloading:
>
        :lua require'lualine'.setup {options = {theme = 'catppuccin-frappe-redux'}}
<
==============================================================================
CONFIGURATION                                   *catppuccin-frappe-redux-configuration*

Note: the configuration options should be placed before `colorscheme catppuccin-frappe-redux`

E.g.
>
    if has('termguicolors')
      set termguicolors
    endif
    set background=light

    let g:catppuccin_frappe_redux_background = 'soft'
    let g:catppuccin_frappe_redux_better_performance = 1

    colorscheme catppuccin-frappe-redux
    let g:lightline = {'colorscheme' : 'catppuccin_frappe_redux'}
<
------------------------------------------------------------------------------
                                                 *g:catppuccin_frappe_redux_background*
g:catppuccin_frappe_redux_background~

The background contrast used in this color scheme.

    Type:               |String|
    Available values:   `'hard'`, `'medium'`, `'soft'`
    Default value:      `'medium'`

------------------------------------------------------------------------------
                                                 *g:catppuccin_frappe_redux_foreground*
g:catppuccin_frappe_redux_foreground~

The foreground color palette used in this color scheme.

- `material`: Carefully designed to have a soft contrast.
- `mix`: Color palette obtained by calculating the mean of the other two.
- `original`: The color palette used in the original gruvbox.

    Type:               |String|
    Available values:   `'material'`, `'mix'`, `'original'`
    Default value:      `'material'`

------------------------------------------------------------------------------
                                     *g:catppuccin_frappe_redux_disable_italic_comment*
g:catppuccin_frappe_redux_disable_italic_comment~

By default, italic is enabled in `Comment`. To disable italic in `Comment`, set
this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                *g:catppuccin_frappe_redux_enable_bold*
g:catppuccin_frappe_redux_enable_bold~

To enable bold in function name just like the original gruvbox, set this
option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                              *g:catppuccin_frappe_redux_enable_italic*
g:catppuccin_frappe_redux_enable_italic~

To enable italic in this color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: This option is designed to use with fonts that support cursive italics.
See |catppuccin-frappe-redux-faq| for more information.

------------------------------------------------------------------------------
                                                     *g:catppuccin_frappe_redux_cursor*
g:catppuccin_frappe_redux_cursor~

Customize the cursor color, only works in GUI clients.

    Type:               |String|
    Available values:   `'auto'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'aqua'`, `'blue'`, `'purple'`
    Default value:      `'auto'`

------------------------------------------------------------------------------
                                     *g:catppuccin_frappe_redux_transparent_background*
g:catppuccin_frappe_redux_transparent_background~

To use transparent background, set this option to `1`.

If you want more ui components to be transparent (for example, status line
background), set this option to `2`.

    Type:               |Number|
    Available values:   `0`, `1`, `2`
    Default value:      `0`

------------------------------------------------------------------------------
                                       *g:catppuccin_frappe_redux_dim_inactive_windows*
g:catppuccin_frappe_redux_dim_inactive_windows~

Dim inactive windows. Only works in Neovim currently.

When this option is used in conjunction with |g:catppuccin_frappe_redux_show_eob| set
to 0, the end of the buffer will only be hidden inside the active window.
Inside inactive windows, the end of buffer filler characters will be visible
in dimmed symbols. This is due to the way Vim and Neovim handle
|hl-EndOfBuffer|.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                     *g:catppuccin_frappe_redux_visual*
g:catppuccin_frappe_redux_visual~

Control the |hl-Visual| and the |hl-VisualNOS| highlight group.

    Type:               |String|
    Available values:   `'grey background'`, `'green background'`,
    `'blue background'`, `'red background'`, `'reverse'`
    Default value:      `'grey background'`

------------------------------------------------------------------------------
                                  *g:catppuccin_frappe_redux_menu_selection_background*
g:catppuccin_frappe_redux_menu_selection_background~

Customize the background color of |hl-PmenuSel| and |hl-WildMenu|.

    Type:               |String|
    Available values:   `'grey'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'aqua'`, `'blue'`, `'purple'`
    Default value:      `'grey'`

------------------------------------------------------------------------------
                                     *g:catppuccin_frappe_redux_sign_column_background*
g:catppuccin_frappe_redux_sign_column_background~

By default, the color of sign column background is the same as normal text
background, but you can use a grey background by setting this option to `'grey'`.

    Type:               |String|
    Available values:   `'none'`, `'grey'`
    Default value:      `'none'`

------------------------------------------------------------------------------
                                           *g:catppuccin_frappe_redux_spell_foreground*
g:catppuccin_frappe_redux_spell_foreground~

By default, this color scheme won't color the foreground of |spell|, instead
colored under curls will be used. If you also want to color the foreground,
set this option to `'colored'`.

    Type:               |String|
    Available values:   `'none'`, `'colored'`
    Default value:      `'none'`

------------------------------------------------------------------------------
                                                *g:catppuccin_frappe_redux_ui_contrast*
g:catppuccin_frappe_redux_ui_contrast~

The contrast of line numbers, indent lines, etc.

    Type:               |String|
    Available values:   `'low'`, `'high'`
    Default value:      `'low'`

------------------------------------------------------------------------------
                                                   *g:catppuccin_frappe_redux_show_eob*
g:catppuccin_frappe_redux_show_eob~

Whether to show |hl-EndOfBuffer|.

    Type:               |Number|
    Available values:   `1`, `0`
    Default value:      `1`

------------------------------------------------------------------------------
                                                *g:catppuccin_frappe_redux_float_style*
g:catppuccin_frappe_redux_float_style~

Style used to make floating windows stand out from other windows. `'bright'`
makes the background of these windows lighter than |hl-Normal|, whereas
`'dim'` makes it darker.

Floating windows include for instance diagnostic pop-ups, scrollable
documentation windows from completion engines, overlay windows from
installers, etc.

    Type:               |String|
    Available values:   `'bright'`, `'dim'`
    Default value:      `'bright'`

------------------------------------------------------------------------------
                                  *g:catppuccin_frappe_redux_diagnostic_text_highlight*
g:catppuccin_frappe_redux_diagnostic_text_highlight~

Some plugins support highlighting error/warning/info/hint texts, by default
these texts are only underlined, but you can use this option to also highlight
the background of them.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- neovim's built-in language server client
- https://gitlab.com/neoclide/coc.nvim
- https://gitlab.com/prabirshrestha/vim-lsp
- https://gitlab.com/ycm-core/YouCompleteMe
- https://gitlab.com/dense-analysis/ale
- https://gitlab.com/neomake/neomake
- https://gitlab.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                  *g:catppuccin_frappe_redux_diagnostic_line_highlight*
g:catppuccin_frappe_redux_diagnostic_line_highlight~

Some plugins support highlighting error/warning/info/hint lines, but this
feature is disabled by default in this color scheme. To enable this feature,
set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- https://gitlab.com/neoclide/coc.nvim
- https://gitlab.com/ycm-core/YouCompleteMe
- https://gitlab.com/dense-analysis/ale
- https://gitlab.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                    *g:catppuccin_frappe_redux_diagnostic_virtual_text*
g:catppuccin_frappe_redux_diagnostic_virtual_text~

Some plugins can use the virtual text feature of Neovim to display
error/warning/info/hint information. You can use this option to adjust the
way these virtual texts are highlighted.

    Type:               |String|
    Available values:   `'grey'`, `'colored'`, `'highlighted'`
    Default value:      `'grey'`

Currently, the following plugins are supported:

- Neovim's built-in language server client
- https://gitlab.com/neoclide/coc.nvim
- https://gitlab.com/prabirshrestha/vim-lsp
- https://gitlab.com/dense-analysis/ale
- https://gitlab.com/neomake/neomake
- https://gitlab.com/ycm-core/YouCompleteMe

------------------------------------------------------------------------------
                                               *g:catppuccin_frappe_redux_current_word*
g:catppuccin_frappe_redux_current_word~

Some plugins can highlight the word under current cursor, you can use this
option to control their behavior.

    Type:               |String|
    Available values:   `'grey background'`, `'high contrast background'`, `'bold'`,
    `'underline'`, `'italic'`
    Default value:      `'grey background'` when not in transparent mode, `'bold'`
    when in transparent mode.

Currently, the following plugins are supported:

- https://gitlab.com/neoclide/coc-highlight
- https://gitlab.com/dominikduda/vim_current_word
- https://gitlab.com/RRethy/vim-illuminate
- https://gitlab.com/itchyny/vim-cursorword
- https://gitlab.com/prabirshrestha/vim-lsp

------------------------------------------------------------------------------
                                     *g:catppuccin_frappe_redux_inlay_hints_background*
g:catppuccin_frappe_redux_inlay_hints_background~

Inlay hints are special markers that are displayed inline with the code to
provide you with additional information. You can use this option to customize
the background color of inlay hints.

    Type:               |String|
    Available values:   `'none'`, `'dimmed'`
    Default value:      `'none'`

Currently, the following LSP clients are supported:

- neovim's built-in language server client
- https://gitlab.com/neoclide/coc.nvim
- https://gitlab.com/prabirshrestha/vim-lsp
- https://gitlab.com/ycm-core/YouCompleteMe

------------------------------------------------------------------------------
                                    *g:catppuccin_frappe_redux_disable_terminal_colors*
g:catppuccin_frappe_redux_disable_terminal_colors~

Setting this option to `1` will disable terminal colors provided by this color
scheme so you can remain terminal colors the same when using |:terminal| in
vim and outside of vim.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                           *g:catppuccin_frappe_redux_statusline_style*
g:catppuccin_frappe_redux_statusline_style~

Determine the style of statusline/airline/lightline/lualine.

There are 3 designs for statusline:

- `default`: See the screenshots.
- `mix`: Combines `default` and `original`.
- `original`: The design used in the original gruvbox.

    Type:               |String|
    Available values:   `'default'`, `'mix'`, `'original'`
    Default value:      `'default'`

------------------------------------------------------------------------------
                                     *g:catppuccin_frappe_redux_lightline_disable_bold*
g:catppuccin_frappe_redux_lightline_disable_bold~

By default, bold is enabled in lightline color scheme. To disable bold in
lightline color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: this configuration option doesn't need to be placed before `colorscheme catppuccin-frappe-redux`

------------------------------------------------------------------------------
                                         *g:catppuccin_frappe_redux_better_performance*
g:catppuccin_frappe_redux_better_performance~

The loading time of this color scheme is very long because too many file types
and plugins are optimized. This feature allows you to load part of the code on
demand by placing them in the `after/syntax` directory.

Enabling this option will reduce loading time by approximately 50%.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: the initial generation of syntax files, which occurs on the first Vim
restart after enabling this option, requires up to 5 seconds to complete.

------------------------------------------------------------------------------
                                            *g:catppuccin_frappe_redux_colors_override*
g:catppuccin_frappe_redux_colors_override~

Override color palette. The available keys can be found in
`/path/to/catppuccin-frappe-redux/autoload/catppuccin_frappe_redux.vim`.

E.g.
>
    let g:catppuccin_frappe_redux_colors_override = {'bg0': ['#1d2021', '234'], 'bg2': ['#282828', '235']}
    colorscheme catppuccin-frappe-redux
<
    Type:               |Dictionary|
    Default value:      `{}`

==============================================================================
FAQ                                                       *catppuccin-frappe-redux-faq*

------------------------------------------------------------------------------

The colors don't match those in the screenshots.~

1. This color scheme is mainly designed for true colors, `set termguicolors`
is required. Check output of `vim --version`, maybe your vim doesn't support
`termguicolors`.

2. Maybe your terminal emulator doesn't support true colors, you can test it
using [this script](https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern).

3. If you are running vim in tmux, you need to override default true colors of
tmux, as tmux cannot display true colors properly:
[#1246 How to use true colors in vim under tmux?](https://gitlab.com/tmux/tmux/issues/1246)

------------------------------------------------------------------------------

The configuration options don't work.~

You should place them before `colorscheme catppuccin-frappe-redux` .

------------------------------------------------------------------------------

A lot of errors are detected if I install with pack feature.~

You'll need to add `packadd! catppuccin-frappe-redux` before applying this color
scheme. Check [jjlabs/catppuccin-frappe-redux#60](https://gitlab.com/jjlabs/catppuccin-frappe-redux/issues/60)

------------------------------------------------------------------------------

I can't apply airline/lightline color scheme.~

The name is `catppuccin_frappe_redux` instead of `catppuccin-frappe-redux`. I have to use
underline for some grammatical reasons.

------------------------------------------------------------------------------

How to enable cursive italic keywords?~

1. Install a font that supports cursive italics, for example https://aka.jjlabs.dev/fonts

2. Enable italic keywords in this color scheme: `let g:catppuccin_frappe_redux_enable_italic = 1`

3. (Optional) Disable italic comment: `let g:catppuccin_frappe_redux_disable_italic_comment = 1`

------------------------------------------------------------------------------

The comment color looks weird.~

Some terminal emulators don't support italics, which may cause the comment
color looks weird. See https://gitlab.com/jjlabs/catppuccin-frappe-redux/issues/5#issuecomment-729586348

A temporary solution is to disable italic comments via
|g:catppuccin_frappe_redux_disable_italic_comment|.

If you are using tmux, you may also need to override default true colors of
tmux: https://gitlab.com/tmux/tmux/issues/1246

------------------------------------------------------------------------------

How to use custom colors?~
>
    function! s:catppuccin_frappe_redux_custom() abort
      " Link a highlight group to a predefined highlight group.
      " See `colors/catppuccin-frappe-redux.vim` for all predefined highlight groups.
      highlight! link groupA groupB
      highlight! link groupC groupD

      " Initialize the color palette.
      " The first parameter is a valid value for `g:catppuccin_frappe_redux_background`,
      " the second parameter is a valid value for `g:catppuccin_frappe_redux_foreground`,
      " and the third parameter is a valid value for `g:catppuccin_frappe_redux_colors_override`.
      let l:palette = catppuccin_frappe_redux#get_palette('hard', 'mix', {})
      " Define a highlight group.
      " The first parameter is the name of a highlight group,
      " the second parameter is the foreground color,
      " the third parameter is the background color,
      " the fourth parameter is for UI highlighting which is optional,
      " and the last parameter is for `guisp` which is also optional.
      " See `autoload/catppuccin_frappe_redux.vim` for the format of `l:palette`.
      call catppuccin_frappe_redux#highlight('groupE', l:palette.red, l:palette.none, 'undercurl', l:palette.red)
    endfunction

    augroup GruvboxMaterialCustom
      autocmd!
      autocmd ColorScheme catppuccin-frappe-redux call s:catppuccin_frappe_redux_custom()
    augroup END

    colorscheme catppuccin-frappe-redux
<
Or in Neovim (Lua configuration):
>
    vim.api.nvim_create_autocmd('ColorScheme', {
      group = vim.api.nvim_create_augroup('custom_highlights_gruvboxmaterial', {}),
      pattern = 'catppuccin-frappe-redux',
      callback = function()
        local config = vim.fn['catppuccin_frappe_redux#get_configuration']()
        local palette = vim.fn['catppuccin_frappe_redux#get_palette'](config.background, config.foreground, config.colors_override)
        local set_hl = vim.fn['catppuccin_frappe_redux#highlight']

        set_hl('Search', palette.none, palette.bg_visual_yellow)
        set_hl('IncSearch', palette.none, palette.bg_visual_red)
      end
    })
<
Note: Make sure to define the `augroup` before declare the `colorscheme`.

------------------------------------------------------------------------------

What's your status line configuration?~

See this post: https://aka.jjlabs.dev/statusline

------------------------------------------------------------------------------

What's the font used here?~

See this post: https://aka.jjlabs.dev/fonts

==============================================================================
vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:et:sw=4:fen:fdm=marker:fmr={{{,}}}:
